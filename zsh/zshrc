# ==================================================================
#  ~/.zshrc: Main configuration file for the Z shell
# ==================================================================

# ------------------------------------------------------------------
#  Set the PATH variable
# ------------------------------------------------------------------
export PATH="$HOME/.local/bin:$HOME/go/bin:$HOME/.pdtm/go/bin:$HOME/.cargo/bin:$HOME/.cargo/env:$PATH"

# ------------------------------------------------------------------
#  Completion System
# ------------------------------------------------------------------
# Load and initialize the completion system
autoload -Uz compinit
compinit -d ~/.cache/zcompdump # Use a cache file to speed up startup

# --- Completion Styling (zstyle) ---
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'
zstyle ':completion:*' rehash true
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd' # Show more info for kill completion

# ------------------------------------------------------------------
#  Environment Variables
# ------------------------------------------------------------------
export LESS="-Xr"
export PYTHONWARNINGS="ignore"
WORDCHARS=${WORDCHARS//\/} # Don't consider '/' a word character

# ------------------------------------------------------------------
#  History Configuration
# ------------------------------------------------------------------
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
export HISTTIMEFORMAT="[%F %T] "

setopt INC_APPEND_HISTORY    # Append to history file immediately
setopt EXTENDED_HISTORY      # Save command start/end time and duration
setopt HIST_FIND_NO_DUPS     # Don't show duplicate commands when searching

# ------------------------------------------------------------------
#  Shell Options (setopt)
# ------------------------------------------------------------------
setopt autocd              # Change directory just by typing its name
# setopt correct           # Auto correct mistakes
setopt interactivecomments # Allow comments in interactive mode
setopt magicequalsubst     # Enable filename expansion for 'anything=expression'
setopt nonomatch           # Hide error if a glob pattern has no match
setopt notify              # Report status of background jobs immediately
setopt numericglobsort     # Sort filenames numerically
setopt promptsubst         # Allow substitutions in the prompt

# ------------------------------------------------------------------
#  Prompt Configuration
# ------------------------------------------------------------------
# --- Prompt Appearance ---
PROMPT=$'%B%F{yellow}%* %F{%(?.green.red)}• %F{#e95420}%1~ %F{magenta}➜ %b%f'
PROMPT_EOL_MARK="" # Hide the '%' character for a cleaner end-of-line

# --- Newline Before Prompt ---
# The precmd hook runs before the prompt is drawn.
# The preexec hook runs before a command is executed.
# This ensures a newline is printed between command output and the next prompt.
NEWLINE_BEFORE_PROMPT=yes

preexec() {
    _NEW_LINE_BEFORE_PROMPT_FLAG=1
}

precmd() {
    # Print the previously configured title
    print -Pnr -- "$TERM_TITLE"

    # Print a new line before the prompt, but only if it is not the first line
    if [ "$NEWLINE_BEFORE_PROMPT" = yes ]; then
        if [ -z "$_NEW_LINE_BEFORE_PROMPT" ]; then
            _NEW_LINE_BEFORE_PROMPT=1
        else
            print ""
        fi
    fi
}

# enable color support of ls, less and man, and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    export LS_COLORS="$LS_COLORS:ow=30;44:" # fix ls color for folders with 777 permissions

    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias diff='diff --color=auto'
    alias ip='ip --color=auto'

    export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
    export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
    export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
    export LESS_TERMCAP_so=$'\E[01;33m'    # begin reverse video
    export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
    export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
    export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

    # Take advantage of $LS_COLORS for completion as well
    zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
    zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
fi

# ------------------------------------------------------------------
#  Keybindings (bindkey)
# ------------------------------------------------------------------
bindkey "${terminfo[kcuu1]}" up-line-or-history    # Up arrow
bindkey "${terminfo[kcud1]}" down-line-or-history  # Down arrow
bindkey ' ' magic-space                            # Do history expansion on space
bindkey '^U' backward-kill-line                    # ctrl + U: kill line backwards
bindkey '^[[3;5~' kill-word                        # ctrl + Supr: kill word forward
bindkey '^[[3~' delete-char                        # delete
bindkey '^[[1;5C' forward-word                     # ctrl + right arrow: move forward one word
bindkey '^[[1;5D' backward-word                    # ctrl + left arrow: move backward one word
bindkey '^[[5~' beginning-of-buffer-or-history     # page up
bindkey '^[[6~' end-of-buffer-or-history           # page down
bindkey '^[[H' beginning-of-line                   # home
bindkey '^[[F' end-of-line                         # end
bindkey '^[[Z' undo                                # shift + tab: undo last action

# ------------------------------------------------------------------
#  Plugins & Custom Scripts Sourcing
# ------------------------------------------------------------------
# --- Load Custom Files ---
if [ -f "$HOME/.zsh_aliases" ]; then
    . "$HOME/.zsh_aliases"
fi

if [ -f "$HOME/.zsh_shortcuts" ]; then
    . "$HOME/.zsh_shortcuts"
fi

if [ -f "$HOME/.zsh_createdir" ]; then
    . "$HOME/.zsh_createdir"
fi

# --- Zsh Plugins ---
# NOTE: The order of loading syntax-highlighting and autosuggestions can matter.
# It's often recommended to load syntax-highlighting last.

# zsh-autosuggestions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5' # Set suggestion color
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    . /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# zsh-syntax-highlighting
if [ -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
    . /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# pdtm plugin
if [ -f $HOME/.pdtm/pdtm.zsh ]; then
    . $HOME/.pdtm/pdtm.zsh
fi

# direnv
eval "$(direnv hook zsh)"

# ------------------------------------------------------------------
#  System & Miscellaneous Settings
# ------------------------------------------------------------------
ulimit -n 4096 # Increase open file limit